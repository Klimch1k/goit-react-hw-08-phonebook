{"version":3,"file":"static/js/64.fa334ff8.chunk.js","mappings":"qOACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA+F,6BCGlFA,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEzBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMI,MAAV,E,SCDzBC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXN,GAAWO,EAAAA,EAAAA,IAAYT,GAgC7B,OACE,kBAAMU,UAAWC,EAAUC,SA/BT,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAcF,EAAEG,cAAcC,KAAKC,MACnCC,EAAgBN,EAAEG,cAAcI,OAAOF,MAEtCG,EAAcnB,EAASoB,MAC3B,SAAAC,GAAO,OAAIA,EAAQN,KAAKO,gBAAkBT,EAAYS,aAA/C,IAGT,GAAIH,EACFI,MAAM,oCADR,CAKD,IAAMF,EAAU,CACdN,KAAMF,EACNK,OAAQD,GAGV,GAAgB,KAAZI,EAGF,OAFAhB,GAASmB,EAAAA,EAAAA,IAAWH,SACpBV,EAAEG,cAAcW,QAGlBF,MAAM,yCAZL,CAeF,EAIE,WACE,6BAAO,QAEL,kBACEf,UAAWC,EACXiB,KAAK,OACLX,KAAK,OACLY,QAAQ,+BACRC,MAAM,yIACNC,UAAQ,QAIZ,6BAAO,UAEL,kBACErB,UAAWC,EACXiB,KAAK,MACLX,KAAK,SACLY,QAAQ,8BACRC,MAAM,+FACNC,UAAQ,QAIZ,mBAAQH,KAAK,SAASlB,UAAWC,EAAjC,SAA6C,kBAKlD,ECrED,EAAuB,2BCIVqB,EAAc,WACzB,IAAMzB,GAAWC,EAAAA,EAAAA,MACXN,GAAWO,EAAAA,EAAAA,IAAYT,GACvBiC,GAAcxB,EAAAA,EAAAA,IAAYL,GAE1B8B,EAAmBhC,EAASG,QAAO,SAAAkB,GAAO,OAC9CA,EAAQN,KAAKO,cAAcW,SAASF,EAAYT,cADF,IAIhD,OACE,eAAId,UAAWC,EAAf,SACGuB,EAAiBE,KAAI,YAA2B,IAAxBnB,EAAuB,EAAvBA,KAAMG,EAAiB,EAAjBA,OAAQiB,EAAS,EAATA,GACrC,OACE,0BACGpB,EAAK,IAAEG,GACR,mBAAQkB,QAAS,kBAAM/B,GAASgC,EAAAA,EAAAA,IAAcF,GAA7B,EAAjB,SAAoD,aAF7CA,EAKZ,KAGN,E,UCzBD,EAAwB,sBCoBxB,EAjBe,WACb,IAAM9B,GAAWC,EAAAA,EAAAA,MAIjB,OACE,+BACE,kBACEE,UAAWC,EACX6B,SAPiB,SAAA3B,GACrBN,GAASkC,EAAAA,EAAAA,GAAS5B,EAAE6B,OAAOxB,OAC5B,EAMKU,KAAK,OACLX,KAAK,YAIZ,ECXc,SAAS0B,IACtB,IAAMpC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAoC,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,MACV,GAAE,CAACtC,KAGF,iCACE,SAACuC,EAAA,EAAD,WACE,2BAAO,gBAET,SAACxC,EAAD,KACA,SAAC,EAAD,KACA,SAAC0B,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactsForm/ContactsForm.module.css?d5f2","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactsList.module.css?c071","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"input\":\"ContactsForm_input__UjXFK\",\"button\":\"ContactsForm_button__zuUB3\"};","export const selectLoading = state => state.contacts.loading;\n\n// export const selectFilter = state => state.contacts.filter;\n\nexport const selectAllcontacts = state => state.contacts.items;\n\nexport const selectFilterState = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactsForm.module.css';\nimport {selectAllcontacts} from '../../redux/contacts/selectors'\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllcontacts);\n\n const handleSubmit = e => {\n   e.preventDefault();\n   const contactName = e.currentTarget.name.value;\n   const contactNumber = e.currentTarget.number.value;\n\n    const isDuplicate = contacts.some(\n      contact => contact.name.toLowerCase() === contactName.toLowerCase()\n    );\n\n    if (isDuplicate) {\n      alert('This contact already exists!');\n      return;\n   }\n   \n   const contact = {\n     name: contactName,\n     number: contactNumber,\n   };\n\n   if (contact !== '') {\n     dispatch(addContact(contact));\n     e.currentTarget.reset();\n     return;\n   }\n   alert('Task cannot be empty. Enter some text!');\n\n  \n };\n\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__KDt-1\",\"wrapper\":\"ContactsList_wrapper__puWKT\",\"text\":\"ContactsList_text__zL+lc\",\"button\":\"ContactsList_button__-1m3L\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectAllcontacts, selectFilterState } from 'redux/contacts/selectors';\nimport css from './ContactsList.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllcontacts);\n  const filterValue = useSelector(selectFilterState);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(({ name, number, id }) => {\n        return (\n          <li key={id}>\n            {name} {number}\n            <button onClick={() => dispatch(deleteContact(id))}>Delete</button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from 'react-redux';\nimport { onFilter } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onChangeFilter = e => {\n    dispatch(onFilter(e.target.value));\n  };\n  return (\n    <>\n      <input\n        className={css.input}\n        onChange={onChangeFilter}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactsForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectAllcontacts","state","contacts","items","selectFilterState","filter","ContactsForm","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","contactName","currentTarget","name","value","contactNumber","number","isDuplicate","some","contact","toLowerCase","alert","addContact","reset","type","pattern","title","required","ContactList","filterValue","filteredContacts","includes","map","id","onClick","deleteContact","onChange","onFilter","target","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}